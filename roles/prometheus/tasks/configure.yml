---
- name: Alerting rules file
  ansible.builtin.template:
    src: "alert.rules.j2"
    dest: "{{ prometheus_config_dir }}/rules/ansible_managed.rules"
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
  when:
    - prometheus_alert_rules != []
    - not prometheus_agent_mode
  notify:
    - Reload Prometheus

- name: Copy custom alerting rule files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/rules/"
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
  with_fileglob: "{{ prometheus_alert_rules_files }}"
  when:
    - not prometheus_agent_mode
  notify:
    - Reload Prometheus

- name: Configure prometheus
  ansible.builtin.template:
    src: "{{ prometheus_config_file }}"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640
    validate: "{{ _prometheus_binary_install_dir }}/promtool check config %s"
  no_log: "{{ false if (lookup('env', 'CI')) or (lookup('env', 'MOLECULE_PROVISIONER_NAME')) else true }}"
  notify:
    - Reload Prometheus

- name: Configure Prometheus web
  ansible.builtin.copy:
    content: "{{ prometheus_web_config | to_nice_yaml(indent=2) }}"
    dest: "{{ prometheus_config_dir }}/web.yml"
    force: true
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640

- name: Configure prometheus static targets
  ansible.builtin.copy:
    content: |
      {{ item.value | to_nice_yaml(indent=2, sort_keys=False) }}
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
    force: true
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640
  with_dict: "{{ prometheus_targets }}"
  when: prometheus_targets != {}

- name: Copy prometheus custom static targets
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/file_sd/"
    force: true
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640
  with_fileglob: "{{ prometheus_static_targets_files }}"

- name: Copy prometheus scrape config files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/scrapes/"
    force: true
    owner: "{{ prometheus_service_user }}"
    group: "{{ prometheus_service_group }}"
    mode: 0640
  with_fileglob: "{{ prometheus_scrape_config_files }}"
